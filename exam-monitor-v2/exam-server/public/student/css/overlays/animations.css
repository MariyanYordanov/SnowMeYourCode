/* 
   Animations & Micro-interactions
   Keyframes, transitions, and interactive feedback
*/

/* =================================
   UTILITY ANIMATIONS
   ================================= */

/* Pulse animation */
@keyframes pulse {

    0%,
    100% {
        opacity: 1;
        transform: scale(1);
    }

    50% {
        opacity: 0.7;
        transform: scale(1.05);
    }
}

.animate-pulse {
    animation: pulse 2s infinite;
}

/* Fade animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
        transform: translateY(0);
    }

    to {
        opacity: 0;
        transform: translateY(-10px);
    }
}

.animate-fade-in {
    animation: fadeIn var(--transition-normal) var(--ease-out);
}

.animate-fade-out {
    animation: fadeOut var(--transition-normal) var(--ease-in);
}

/* Slide animations */
@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutRight {
    from {
        transform: translateX(0);
        opacity: 1;
    }

    to {
        transform: translateX(100%);
        opacity: 0;
    }
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutLeft {
    from {
        transform: translateX(0);
        opacity: 1;
    }

    to {
        transform: translateX(-100%);
        opacity: 0;
    }
}

.animate-slide-in-right {
    animation: slideInRight var(--transition-normal) var(--ease-out);
}

.animate-slide-out-right {
    animation: slideOutRight var(--transition-normal) var(--ease-in);
}

.animate-slide-in-left {
    animation: slideInLeft var(--transition-normal) var(--ease-out);
}

.animate-slide-out-left {
    animation: slideOutLeft var(--transition-normal) var(--ease-in);
}

/* =================================
   BUTTON ANIMATIONS
   ================================= */

/* Button hover effects */
.btn-hover-lift {
    transition: var(--transition-transform);
}

.btn-hover-lift:hover {
    transform: translateY(-2px);
}

.btn-hover-grow {
    transition: var(--transition-transform);
}

.btn-hover-grow:hover {
    transform: scale(1.05);
}

/* Button click feedback */
.btn-click-feedback {
    position: relative;
    overflow: hidden;
}

.btn-click-feedback::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.3s, height 0.3s;
}

.btn-click-feedback:active::after {
    width: 300px;
    height: 300px;
}

/* =================================
   LOADING ANIMATIONS
   ================================= */

/* Spinner */
@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

.animate-spin {
    animation: spin 1s linear infinite;
}

/* Dots loading */
@keyframes dotPulse {

    0%,
    80%,
    100% {
        transform: scale(0.8);
        opacity: 0.5;
    }

    40% {
        transform: scale(1);
        opacity: 1;
    }
}

.loading-dots {
    display: inline-flex;
    gap: var(--spacing-xs);
}

.loading-dot {
    width: 8px;
    height: 8px;
    background: var(--primary-color);
    border-radius: 50%;
    animation: dotPulse 1.4s infinite;
}

.loading-dot:nth-child(2) {
    animation-delay: 0.2s;
}

.loading-dot:nth-child(3) {
    animation-delay: 0.4s;
}

/* Progress bar animation */
@keyframes progressSlide {
    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(100vw);
    }
}

.progress-bar {
    width: 100%;
    height: 3px;
    background: var(--border-light);
    overflow: hidden;
    position: relative;
}

.progress-bar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 30%;
    background: var(--primary-color);
    animation: progressSlide 2s infinite;
}

/* =================================
   NOTIFICATION ANIMATIONS
   ================================= */

/* Notification slide in/out */
@keyframes notificationSlideIn {
    from {
        transform: translateX(100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes notificationSlideOut {
    from {
        transform: translateX(0);
        opacity: 1;
    }

    to {
        transform: translateX(100%);
        opacity: 0;
    }
}

.notification-enter {
    animation: notificationSlideIn var(--transition-normal) var(--ease-out);
}

.notification-exit {
    animation: notificationSlideOut var(--transition-normal) var(--ease-in);
}

/* Notification shake for errors */
@keyframes notificationShake {

    0%,
    100% {
        transform: translateX(0);
    }

    25% {
        transform: translateX(-5px);
    }

    75% {
        transform: translateX(5px);
    }
}

.notification-error {
    animation: notificationShake 0.5s ease-in-out;
}

/* =================================
   EXAM-SPECIFIC ANIMATIONS
   ================================= */

/* Timer warning pulse */
@keyframes timerWarning {

    0%,
    100% {
        color: var(--warning-color);
        text-shadow: 0 0 5px rgba(255, 193, 7, 0.5);
    }

    50% {
        color: #e0a800;
        text-shadow: 0 0 10px rgba(255, 193, 7, 0.8);
    }
}

.timer-warning {
    animation: timerWarning 1s infinite;
}

/* Timer critical pulse */
@keyframes timerCritical {

    0%,
    100% {
        color: var(--danger-color);
        text-shadow: 0 0 5px rgba(220, 53, 69, 0.5);
        transform: scale(1);
    }

    50% {
        color: #ff4757;
        text-shadow: 0 0 15px rgba(220, 53, 69, 1);
        transform: scale(1.05);
    }
}

.timer-critical {
    animation: timerCritical 0.5s infinite;
}

/* Code execution feedback */
@keyframes codeSuccess {
    0% {
        background: var(--success-color);
        transform: scale(1);
    }

    50% {
        background: #45a049;
        transform: scale(1.05);
    }

    100% {
        background: var(--success-color);
        transform: scale(1);
    }
}

.code-execution-success {
    animation: codeSuccess 0.3s ease-out;
}

@keyframes codeError {

    0%,
    100% {
        background: var(--danger-color);
    }

    25%,
    75% {
        background: #ff4757;
    }
}

.code-execution-error {
    animation: codeError 0.5s ease-in-out;
}

/* =================================
   CONNECTION STATUS ANIMATIONS
   ================================= */

/* Connected pulse */
@keyframes connected {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: 0.6;
    }
}

.status-connected {
    animation: connected 2s infinite;
}

/* Disconnected blink */
@keyframes disconnected {

    0%,
    50% {
        opacity: 1;
    }

    51%,
    100% {
        opacity: 0.3;
    }
}

.status-disconnected {
    animation: disconnected 1s infinite;
}

/* Reconnecting dots */
@keyframes reconnecting {

    0%,
    20% {
        color: var(--text-muted);
    }

    21%,
    40% {
        color: var(--warning-color);
    }

    41%,
    60% {
        color: var(--text-muted);
    }

    61%,
    80% {
        color: var(--warning-color);
    }

    81%,
    100% {
        color: var(--text-muted);
    }
}

.status-reconnecting {
    animation: reconnecting 2s infinite;
}

/* =================================
   TAB SWITCHING ANIMATIONS
   ================================= */

/* Tab content slide */
@keyframes tabSlideIn {
    from {
        opacity: 0;
        transform: translateX(20px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.tab-content.animate-enter {
    animation: tabSlideIn var(--transition-fast) var(--ease-out);
}

/* Tab hint pulse */
@keyframes tabHint {
    0% {
        box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.7);
    }

    70% {
        box-shadow: 0 0 0 10px rgba(102, 126, 234, 0);
    }

    100% {
        box-shadow: 0 0 0 0 rgba(102, 126, 234, 0);
    }
}

.tab-hint {
    animation: tabHint 2s infinite;
}

/* =================================
   CONSOLE ANIMATIONS
   ================================= */

/* New console line slide */
@keyframes consoleLineIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
        max-height: 0;
    }

    to {
        opacity: 1;
        transform: translateY(0);
        max-height: 100px;
    }
}

.console-line-new {
    animation: consoleLineIn var(--transition-fast) var(--ease-out);
}

/* Console clear animation */
@keyframes consoleClear {
    from {
        opacity: 1;
        transform: scale(1);
    }

    to {
        opacity: 0;
        transform: scale(0.95);
    }
}

.console-clearing {
    animation: consoleClear var(--transition-fast) var(--ease-in);
}

/* =================================
   FILE EXPLORER ANIMATIONS
   ================================= */

/* File tree expand/collapse */
@keyframes treeExpand {
    from {
        max-height: 0;
        opacity: 0;
    }

    to {
        max-height: 500px;
        opacity: 1;
    }
}

@keyframes treeCollapse {
    from {
        max-height: 500px;
        opacity: 1;
    }

    to {
        max-height: 0;
        opacity: 0;
    }
}

.tree-expand {
    animation: treeExpand var(--transition-normal) var(--ease-out);
    overflow: hidden;
}

.tree-collapse {
    animation: treeCollapse var(--transition-normal) var(--ease-in);
    overflow: hidden;
}

/* File hover effect */
.file-item-hover {
    transition: var(--transition-colors);
}

.file-item-hover:hover {
    background: rgba(102, 126, 234, 0.1);
    transform: translateX(2px);
}

/* =================================
   DEVTOOLS ANIMATIONS
   ================================= */

/* Network request appear */
@keyframes networkRequestIn {
    from {
        opacity: 0;
        transform: translateY(-5px);
        background: rgba(102, 126, 234, 0.2);
    }

    to {
        opacity: 1;
        transform: translateY(0);
        background: transparent;
    }
}

.network-request-new {
    animation: networkRequestIn var(--transition-fast) var(--ease-out);
}

/* Panel slide animations */
@keyframes panelSlideIn {
    from {
        transform: translateX(100%);
    }

    to {
        transform: translateX(0);
    }
}

@keyframes panelSlideOut {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(100%);
    }
}

.panel-slide-in {
    animation: panelSlideIn var(--transition-normal) var(--ease-out);
}

.panel-slide-out {
    animation: panelSlideOut var(--transition-normal) var(--ease-in);
}

/* =================================
   HOVER EFFECTS
   ================================= */

/* Subtle glow effect */
.glow-on-hover {
    transition: box-shadow var(--transition-normal);
}

.glow-on-hover:hover {
    box-shadow: 0 0 20px rgba(102, 126, 234, 0.3);
}

/* Scale on hover */
.scale-on-hover {
    transition: var(--transition-transform);
}

.scale-on-hover:hover {
    transform: scale(1.02);
}

/* Rotate on hover */
.rotate-on-hover {
    transition: var(--transition-transform);
}

.rotate-on-hover:hover {
    transform: rotate(5deg);
}

/* =================================
   FOCUS ANIMATIONS
   ================================= */

/* Focus ring animation */
@keyframes focusRing {
    from {
        box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.4);
    }

    to {
        box-shadow: 0 0 0 4px rgba(102, 126, 234, 0);
    }
}

.focus-ring {
    animation: focusRing 0.3s ease-out;
}

/* =================================
   ACCESSIBILITY & REDUCED MOTION
   ================================= */

/* Respect user's motion preferences */
@media (prefers-reduced-motion: reduce) {

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }

    /* Keep essential loading indicators */
    .animate-spin,
    .loading-dots,
    .progress-bar::after {
        animation: none !important;
    }

    /* Show static states instead */
    .status-connected,
    .status-disconnected,
    .timer-warning,
    .timer-critical {
        animation: none !important;
    }

    /* Disable hover transforms */
    .btn-hover-lift:hover,
    .btn-hover-grow:hover,
    .scale-on-hover:hover,
    .rotate-on-hover:hover {
        transform: none !important;
    }
}

/* =================================
   PERFORMANCE OPTIMIZATIONS
   ================================= */

/* Hardware acceleration for smooth animations */
.hw-accelerated {
    transform: translateZ(0);
    will-change: transform;
}

/* Optimize repaints */
.optimize-repaint {
    will-change: opacity, transform;
}

/* =================================
   ANIMATION UTILITIES
   ================================= */

/* Animation delays */
.delay-100 {
    animation-delay: 0.1s;
}

.delay-200 {
    animation-delay: 0.2s;
}

.delay-300 {
    animation-delay: 0.3s;
}

.delay-500 {
    animation-delay: 0.5s;
}

/* Animation durations */
.duration-fast {
    animation-duration: var(--transition-fast);
}

.duration-normal {
    animation-duration: var(--transition-normal);
}

.duration-slow {
    animation-duration: var(--transition-slow);
}

/* Animation fill modes */
.fill-forwards {
    animation-fill-mode: forwards;
}

.fill-backwards {
    animation-fill-mode: backwards;
}

.fill-both {
    animation-fill-mode: both;
}

/* Animation iteration counts */
.infinite {
    animation-iteration-count: infinite;
}

.once {
    animation-iteration-count: 1;
}

.twice {
    animation-iteration-count: 2;
}

/* Pause/play controls */
.paused {
    animation-play-state: paused;
}

.running {
    animation-play-state: running;
}